Program ::= MainFunction FunctionDeclaration* 'eof'

MainFunction ::= 'fn' 'main' '(' ')' '{' Statement '}'

VarDeclaration ::= 'let' Identifier ':' Type ';'

MethodDeclaration ::= 'fn' Identifier '(' ( Identifier ':' Type ( ',' Identifier ':' Type )* )? ')' '->' Type '{' VarDeclaration* Statement* 'return' Expression ';' '}'

Type ::= '[' Type ';' 'i32' ']'
        | 'bool'
        | 'i32'

Statement ::= '{' Statement* '}'
        | 'if' '(' Expression ')' Statement 'else' Statement
        | 'while' '(' Expression ')' Statement
        | 'print!' '(' Expression ')' ';'
        | Identifier '=' Expression ';'
        | Identifier '[' Expression ']' '=' Expression ';'

Expression ::= Expression ( '&&' | '<' | '+' | '-' | '*' ) Expression
        | Expression '[' Expression ']'
        | Integer
        | 'true'
        | 'false'
        | Identifier
        | '!' Expression
        | '(' Expression ')'

Integer ::= [0-9]+

Identifier ::= [a-zA-Z_][a-zA-Z0-9_]*
